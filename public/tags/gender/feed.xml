<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gender on Justin Murphy</title>
    <link>/tags/gender/</link>
    <description>Recent content in gender on Justin Murphy</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>Justin Murphy</copyright>
    <lastBuildDate>Tue, 07 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="/tags/gender/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tech Journalism is Less Diverse than Tech</title>
      <link>/post/tech-journalism/</link>
      <pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/tech-journalism/</guid>
      <description>


&lt;p&gt;Tech journalists often criticize the technology sector for a lack of racial and gender diversity. So we analyzed the diversity of tech journalists. Using multiple sampling methods, and multiple ways of measuring race and gender, we find that tech journalism is almost certainly less racially diverse than tech itself.&lt;/p&gt;
&lt;div id=&#34;tldr&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;TLDR&lt;/h2&gt;
&lt;p&gt;The workforce of the big five tech companies is about 51% white, averaging across each company’s most recent diversity report, linked below. Big Tech is therefore more diverse than tech journalism, which our analysis suggests to be somewhere between 77% on the low end (if we infer race from surnames of 855 Twitter accounts) and 84% white on the high end (if we check our results against third-party-curated Twitter lists of tech journalists). If we guess race from a manual, subjective assessment of the 855 Twitter accounts we identified, then it appears that 80% of tech journalists are white. The tightness of these estimates for tech journalism should inspire some confidence in their accuracy.&lt;/p&gt;
&lt;p&gt;As of 2020, the percentage of White employees at Facebook is &lt;a href=&#34;https://diversity.fb.com/read-report/&#34;&gt;63.2%.&lt;/a&gt; At Google, &lt;a href=&#34;https://kstatic.googleusercontent.com/files/25badfc6b6d1b33f3b87372ff7545d79261520d821e6ee9a82c4ab2de42a01216be2156bc5a60ae3337ffe7176d90b8b2b3000891ac6e516a650ecebf0e3f866&#34;&gt;51.7%&lt;/a&gt;. At Microsoft, &lt;a href=&#34;https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4aqv1&#34;&gt;53.2%&lt;/a&gt;. At Amazon, &lt;a href=&#34;https://www.aboutamazon.com/working-at-amazon/diversity-and-inclusion/our-workforce-data&#34;&gt;34.7%&lt;/a&gt;. At Apple, &lt;a href=&#34;https://www.apple.com/diversity/&#34;&gt;50%&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1aFy9DamIUbRwY_jK0ac1Pg-iYqbMlieLxaASinY3AJw/edit?usp=sharing&#34;&gt;Here is our dataset.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;background-and-overview-of-the-methodology&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Background and overview of the methodology&lt;/h2&gt;
&lt;p&gt;The initial dataset gathered by &lt;a href=&#34;https://twitter.com/OoTheNigerian&#34;&gt;OoTheNigerian&lt;/a&gt; focused on the diversity of attendees at tech-journalism conferences, but this approach has two major limitations. First, conferences are subject to a variety of selection biases, which might not have anything to do with tech-journalism culture per se. Second, there are only so many tech-journalism conferences, so this approach will likely leave us with an unnecessarily small sample.&lt;/p&gt;
&lt;p&gt;Here we pursue a different approach, using multiple methods to check the robustness of our results. Thanks to OoTheNigerian for his help.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;two-different-sampling-methods&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Two different sampling methods&lt;/h2&gt;
&lt;p&gt;We use two different sampling methods to make sure our results are not sensitive to how the set of “tech journalists” is defined. In a first sampling method, we collected lists of individuals on Twitter whose bios indicate current or past work for any one of 13 major tech-journalism outlets (namely Verge, Gigaom, Cnet, Wired, Engadget, The Information, Recode, The Next Web, Venture Beat, TechRadar, TechCrunch, Gizmodo, and Motherboard).&lt;/p&gt;
&lt;p&gt;Alternatively, we also gather a dataset of tech journalists by combining two publicly available, third-party-curated lists called “Tech Journalists.” We had no role in the curation of these lists, so if the results of our diversity analysis are similar when conducted on this sample as well, we should be highly confident that our analyses accurately reflect the true state of tech journalism on Twitter.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;two-ways-of-estimating-race-and-gender&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Two ways of estimating race and gender&lt;/h2&gt;
&lt;p&gt;Estimating race and gender is fraught. A method based on measurable, objective aspects of a person’s identity may fail to capture certain nuances in how race and gender are socially constructed. A method based on subjective human judgment might err by being inconsistent, ignorant, or prejudiced about how race and gender are assigned. To deal with the limitations of each method, we estimate race and gender through both methods: If the results are similar, we should be relatively confident in their accuracy.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Subjective judgment.&lt;/em&gt; Estimating race and gender through subjective judgment was straightforward, if not always possible: We looked at each Twitter account and inferred the individual’s race and gender holistically, using their profile photo, name, and context-clues in their bio. In most cases, the inference was unambiguous. In cases where either the gender or race was unclear, we assigned an “NA” for the given variable. Given some controversy over the race of Arab and Persian people (the US census says “white” but many people have contested this), we sidestep the matter by assigning Arabs and Persians “NA” for race. (There were only about 15 total so including them would likely make tech journalism even less diverse.)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Objective judgment.&lt;/em&gt; Alternatively, we leveraged data from the Census and the Social Security Administration to infer journalist’s race and gender from surnames and first names, respectively.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;note-on-the-analytic-virtue-of-using-twitter-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Note on the analytic virtue of using Twitter data&lt;/h2&gt;
&lt;p&gt;While our approach certainly has its own limitations, analyzing the culture of tech journalism via Twitter-based samples seems uniquely attractive. First, it’s possible some tech journalists are not on Twitter, but since Twitter is both a hot technology and a watering-hole for journalists, this potential selection bias seems particularly unthreatening. Twitter is arguably the ideal place to draw a sample of tech journalists. A second limitation of my approach is that we may very well fail to identify some tech journalists who are on Twitter, but this is only an analytical problem if there is some reason to believe that white people or male people are more or less likely to surface in my search procedures. Assuming this is very unlikely, the worst that can be said of our sampling method is that it’s unlikely to capture every single tech journalist on Twitter. Nonetheless, it is likely to be quite close to a random sample of all the tech journalists on Twitter, which means it should plausibly generalize. If there is a non-trivial community of tech journalists not on Twitter someone should tell them about what’s new in the world of technology.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;note-on-inferring-race-and-gender-from-names&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Note on inferring race and gender from names&lt;/h2&gt;
&lt;p&gt;In estimating race from surnames, the most serious problem is due to the history of anti-black racism and slavery in the United States. Because of slavery in the United States, black people in America today frequently have non-African last names (such as Williams or Washington). Therefore, inferring race from surnames will generally under-count black people. As you’ll see below, we take some extra steps to mitigate this problem (see my comments inside the code snippets), but the results of any automated measurement method will always have some amount of error. Same for gender. We believe this problem is more than off-set by using subjective judgment as an independent and alternative approach.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;approach-1-tech-journalists-who-mention-a-major-tech-journalism-outlet-in-their-bio&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Approach 1: Tech journalists who mention a major tech-journalism outlet in their bio&lt;/h2&gt;
&lt;p&gt;I used the R package &lt;em&gt;rtweet&lt;/em&gt; to search for anyone on Twitter who mentions one of 12 journalism-related keywords (reporter, journalist, producer, designer, editor, writer, analyst, current, former, bylines, columnist, freelance) and one of 13 tech-journalism oulets in their bio (Verge, Gigaom, Cnet, Wired, Engadget, The Information, Recode, The Next Web, Venture Beat, TechRadar, TechCrunch, Gizmodo, and Motherboard). The API allows for up to 1,000 results per search.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Load required packages 

require(rtweet)
require(tidyverse)
require(predictrace)
require(stringr)
require(gender)
require(DT)
require(grid)

# Search for accounts mentioning tech-journalism outlets 


v1 &amp;lt;- search_users(&amp;quot;reporter Verge&amp;quot;, n = 1000)
v2 &amp;lt;- search_users(&amp;quot;journalist Verge&amp;quot;, n = 1000)
v3 &amp;lt;- search_users(&amp;quot;producer Verge&amp;quot;, n = 1000)
v4 &amp;lt;- search_users(&amp;quot;designer Verge&amp;quot;, n = 1000)
v5 &amp;lt;- search_users(&amp;quot;editor Verge&amp;quot;, n = 1000)
v6 &amp;lt;- search_users(&amp;quot;writer Verge&amp;quot;, n = 1000)
v7 &amp;lt;- search_users(&amp;quot;analyst Verge&amp;quot;, n = 1000)
v8 &amp;lt;- search_users(&amp;quot;current Verge&amp;quot;, n = 1000)
v9 &amp;lt;- search_users(&amp;quot;former Verge&amp;quot;, n = 1000)
v10 &amp;lt;- search_users(&amp;quot;bylines Verge&amp;quot;, n = 1000)
v11 &amp;lt;- search_users(&amp;quot;columnist Verge&amp;quot;, n = 1000)
v12 &amp;lt;- search_users(&amp;quot;freelance Verge&amp;quot;, n = 1000)
v&amp;lt;-rbind(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12)
v$outlet&amp;lt;-&amp;quot;The Verge&amp;quot;
rm(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12)


go1 &amp;lt;- search_users(&amp;quot;reporter Gigaom&amp;quot;, n = 1000)
go2 &amp;lt;- search_users(&amp;quot;journalist Gigaom&amp;quot;, n = 1000)
go3 &amp;lt;- search_users(&amp;quot;producer Gigaom&amp;quot;, n = 1000)
go4 &amp;lt;- search_users(&amp;quot;designer Gigaom&amp;quot;, n = 1000)
go5 &amp;lt;- search_users(&amp;quot;editor Gigaom&amp;quot;, n = 1000)
go6 &amp;lt;- search_users(&amp;quot;writer Gigaom&amp;quot;, n = 1000)
go7 &amp;lt;- search_users(&amp;quot;analyst Gigaom&amp;quot;, n = 1000)
go8 &amp;lt;- search_users(&amp;quot;current Gigaom&amp;quot;, n = 1000)
go9 &amp;lt;- search_users(&amp;quot;former Gigaom&amp;quot;, n = 1000)
go10 &amp;lt;- search_users(&amp;quot;bylines Gigaom&amp;quot;, n = 1000)
go11 &amp;lt;- search_users(&amp;quot;columnist Gigaom&amp;quot;, n = 1000)
go12 &amp;lt;- search_users(&amp;quot;freelance Gigaom&amp;quot;, n = 1000)
go&amp;lt;-rbind(go1, go2, go3, go4, go5, go6, go7, go8, go9, go10, go11, go12)
go$outlet&amp;lt;-&amp;quot;Gigaom&amp;quot;
rm(go1, go2, go3, go4, go5, go6, go7, go8, go9, go10, go11, go12)

e1 &amp;lt;- search_users(&amp;quot;reporter Engadget&amp;quot;, n = 1000)
e2 &amp;lt;- search_users(&amp;quot;journalist Engadget&amp;quot;, n = 1000)
e3 &amp;lt;- search_users(&amp;quot;producer Engadget&amp;quot;, n = 1000)
e4 &amp;lt;- search_users(&amp;quot;designer Engadget&amp;quot;, n = 1000)
e5 &amp;lt;- search_users(&amp;quot;editor Engadget&amp;quot;, n = 1000)
e6 &amp;lt;- search_users(&amp;quot;writer Engadget&amp;quot;, n = 1000)
e7 &amp;lt;- search_users(&amp;quot;analyst Engadget&amp;quot;, n = 1000)
e8 &amp;lt;- search_users(&amp;quot;current Engadget&amp;quot;, n = 1000)
e9 &amp;lt;- search_users(&amp;quot;former Engadget&amp;quot;, n = 1000)
e10 &amp;lt;- search_users(&amp;quot;bylines Engadget&amp;quot;, n = 1000)
e11 &amp;lt;- search_users(&amp;quot;columnist Engadget&amp;quot;, n = 1000)
e12 &amp;lt;- search_users(&amp;quot;freelance Engadget&amp;quot;, n = 1000)
e&amp;lt;-rbind(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12)
e$outlet&amp;lt;-&amp;quot;Engadget&amp;quot;
rm(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12)


vb1 &amp;lt;- search_users(&amp;quot;reporter VentureBeat&amp;quot;, n = 1000)
vb2 &amp;lt;- search_users(&amp;quot;journalist VentureBeat&amp;quot;, n = 1000)
vb3 &amp;lt;- search_users(&amp;quot;producer VentureBeat&amp;quot;, n = 1000)
vb4 &amp;lt;- search_users(&amp;quot;designer VentureBeat&amp;quot;, n = 1000)
vb5 &amp;lt;- search_users(&amp;quot;editor VentureBeat&amp;quot;, n = 1000)
vb6 &amp;lt;- search_users(&amp;quot;writer VentureBeat&amp;quot;, n = 1000)
vb7 &amp;lt;- search_users(&amp;quot;analyst VentureBeat&amp;quot;, n = 1000)
vb8 &amp;lt;- search_users(&amp;quot;current VentureBeat&amp;quot;, n = 1000)
vb9 &amp;lt;- search_users(&amp;quot;former VentureBeat&amp;quot;, n = 1000)
vb10 &amp;lt;- search_users(&amp;quot;bylines VentureBeat&amp;quot;, n = 1000)
vb11 &amp;lt;- search_users(&amp;quot;columnist VentureBeat&amp;quot;, n = 1000)
vb12 &amp;lt;- search_users(&amp;quot;freelance VentureBeat&amp;quot;, n = 1000)
vb&amp;lt;-rbind(vb1, vb2, vb3, vb4, vb5, vb6, vb7, vb8, vb9, vb10, vb11, vb12)
vb$outlet&amp;lt;-&amp;quot;Venture Beat&amp;quot;
rm(vb1, vb2, vb3, vb4, vb5, vb6, vb7, vb8, vb9, vb10, vb11, vb12)


wi1 &amp;lt;- search_users(&amp;quot;reporter wired&amp;quot;, n = 1000)
wi2 &amp;lt;- search_users(&amp;quot;journalist wired&amp;quot;, n = 1000)
wi3 &amp;lt;- search_users(&amp;quot;producer wired&amp;quot;, n = 1000)
wi4 &amp;lt;- search_users(&amp;quot;designer wired&amp;quot;, n = 1000)
wi5 &amp;lt;- search_users(&amp;quot;editor wired&amp;quot;, n = 1000)
wi6 &amp;lt;- search_users(&amp;quot;writer wired&amp;quot;, n = 1000)
wi7 &amp;lt;- search_users(&amp;quot;analyst wired&amp;quot;, n = 1000)
wi8 &amp;lt;- search_users(&amp;quot;current wired&amp;quot;, n = 1000)
wi9 &amp;lt;- search_users(&amp;quot;former wired&amp;quot;, n = 1000)
wi10 &amp;lt;- search_users(&amp;quot;bylines wired&amp;quot;, n = 1000)
wi11 &amp;lt;- search_users(&amp;quot;columnist wired&amp;quot;, n = 1000)
wi12 &amp;lt;- search_users(&amp;quot;freelance wired&amp;quot;, n = 1000)
wi&amp;lt;-rbind(wi1, wi2, wi3, wi4, wi5, wi6, wi7, wi8, wi9, wi10, wi11, wi12)
wi$outlet&amp;lt;-&amp;quot;Wired&amp;quot;
rm(wi1, wi2, wi3, wi4, wi5, wi6, wi7, wi8, wi9, wi10, wi11, wi12)


nw1 &amp;lt;- search_users(&amp;quot;reporter thenextweb&amp;quot;, n = 1000)
nw2 &amp;lt;- search_users(&amp;quot;journalist thenextweb&amp;quot;, n = 1000)
nw3 &amp;lt;- search_users(&amp;quot;producer thenextweb&amp;quot;, n = 1000)
nw4 &amp;lt;- search_users(&amp;quot;designer thenextweb&amp;quot;, n = 1000)
nw5 &amp;lt;- search_users(&amp;quot;editor thenextweb&amp;quot;, n = 1000)
nw6 &amp;lt;- search_users(&amp;quot;writer thenextweb&amp;quot;, n = 1000)
nw7 &amp;lt;- search_users(&amp;quot;analyst thenextweb&amp;quot;, n = 1000)
nw8 &amp;lt;- search_users(&amp;quot;current thenextweb&amp;quot;, n = 1000)
nw9 &amp;lt;- search_users(&amp;quot;former thenextweb&amp;quot;, n = 1000)
nw10 &amp;lt;- search_users(&amp;quot;bylines thenextweb&amp;quot;, n = 1000)
nw11 &amp;lt;- search_users(&amp;quot;columnist thenextweb&amp;quot;, n = 1000)
nw12 &amp;lt;- search_users(&amp;quot;freelance thenextweb&amp;quot;, n = 1000)
nw&amp;lt;-rbind(nw1, nw2, nw3, nw4, nw5, nw6, nw7, nw8, nw9, nw10, nw11, nw12)
nw$outlet&amp;lt;-&amp;quot;The Next Web&amp;quot;
rm(nw1, nw2, nw3, nw4, nw5, nw6, nw7, nw8, nw9, nw10, nw11, nw12)


gm1 &amp;lt;- search_users(&amp;quot;reporter gizmodo&amp;quot;, n = 1000)
gm2 &amp;lt;- search_users(&amp;quot;journalist gizmodo&amp;quot;, n = 1000)
gm3 &amp;lt;- search_users(&amp;quot;producer gizmodo&amp;quot;, n = 1000)
gm4 &amp;lt;- search_users(&amp;quot;designer gizmodo&amp;quot;, n = 1000)
gm5 &amp;lt;- search_users(&amp;quot;editor gizmodo&amp;quot;, n = 1000)
gm6 &amp;lt;- search_users(&amp;quot;writer gizmodo&amp;quot;, n = 1000)
gm7 &amp;lt;- search_users(&amp;quot;analyst gizmodo&amp;quot;, n = 1000)
gm8 &amp;lt;- search_users(&amp;quot;current gizmodo&amp;quot;, n = 1000)
gm9 &amp;lt;- search_users(&amp;quot;former gizmodo&amp;quot;, n = 1000)
gm10 &amp;lt;- search_users(&amp;quot;bylines gizmodo&amp;quot;, n = 1000)
gm11 &amp;lt;- search_users(&amp;quot;columnist gizmodo&amp;quot;, n = 1000)
gm12 &amp;lt;- search_users(&amp;quot;freelance gizmodo&amp;quot;, n = 1000)
gm&amp;lt;-rbind(gm1, gm2, gm3, gm4, gm5, gm6, gm7, gm8, gm9, gm10, gm11, gm12)
gm$outlet&amp;lt;-&amp;quot;Gizmodo&amp;quot;
rm(gm1, gm2, gm3, gm4, gm5, gm6, gm7, gm8, gm9, gm10, gm11, gm12)

cn1 &amp;lt;- search_users(&amp;quot;reporter cnet&amp;quot;, n = 1000)
cn2 &amp;lt;- search_users(&amp;quot;journalist cnet&amp;quot;, n = 1000)
cn3 &amp;lt;- search_users(&amp;quot;producer cnet&amp;quot;, n = 1000)
cn4 &amp;lt;- search_users(&amp;quot;designer cnet&amp;quot;, n = 1000)
cn5 &amp;lt;- search_users(&amp;quot;editor cnet&amp;quot;, n = 1000)
cn6 &amp;lt;- search_users(&amp;quot;writer cnet&amp;quot;, n = 1000)
cn7 &amp;lt;- search_users(&amp;quot;analyst cnet&amp;quot;, n = 1000)
cn8 &amp;lt;- search_users(&amp;quot;current cnet&amp;quot;, n = 1000)
cn9 &amp;lt;- search_users(&amp;quot;former cnet&amp;quot;, n = 1000)
cn10 &amp;lt;- search_users(&amp;quot;bylines cnet&amp;quot;, n = 1000)
cn11 &amp;lt;- search_users(&amp;quot;columnist cnet&amp;quot;, n = 1000)
cn12 &amp;lt;- search_users(&amp;quot;freelance cnet&amp;quot;, n = 1000)
cn&amp;lt;-rbind(cn1, cn2, cn3, cn4, cn5, cn6, cn7, cn8, cn9, cn10, cn11, cn12)
cn$outlet&amp;lt;-&amp;quot;Cnet&amp;quot;
rm(cn1, cn2, cn3, cn4, cn5, cn6, cn7, cn8, cn9, cn10, cn11, cn12)

tr1 &amp;lt;- search_users(&amp;quot;reporter techradar&amp;quot;, n = 1000)
tr2 &amp;lt;- search_users(&amp;quot;journalist techradar&amp;quot;, n = 1000)
tr3 &amp;lt;- search_users(&amp;quot;producer techradar&amp;quot;, n = 1000)
tr4 &amp;lt;- search_users(&amp;quot;designer techradar&amp;quot;, n = 1000)
tr5 &amp;lt;- search_users(&amp;quot;editor techradar&amp;quot;, n = 1000)
tr6 &amp;lt;- search_users(&amp;quot;writer techradar&amp;quot;, n = 1000)
tr7 &amp;lt;- search_users(&amp;quot;analyst techradar&amp;quot;, n = 1000)
tr8 &amp;lt;- search_users(&amp;quot;current techradar&amp;quot;, n = 1000)
tr9 &amp;lt;- search_users(&amp;quot;former techradar&amp;quot;, n = 1000)
tr10 &amp;lt;- search_users(&amp;quot;bylines techradar&amp;quot;, n = 1000)
tr11 &amp;lt;- search_users(&amp;quot;columnist techradar&amp;quot;, n = 1000)
tr12 &amp;lt;- search_users(&amp;quot;freelance techradar&amp;quot;, n = 1000)
tr&amp;lt;-rbind(tr1, tr2, tr3, tr4, tr5, tr6, tr7, tr8, tr9, tr10, tr11, tr12)
tr$outlet&amp;lt;-&amp;quot;TechRadar&amp;quot;
rm(tr1, tr2, tr3, tr4, tr5, tr6, tr7, tr8, tr9, tr10, tr11, tr12)

ti1 &amp;lt;- search_users(&amp;quot;reporter theinformation&amp;quot;, n = 1000)
ti2 &amp;lt;- search_users(&amp;quot;journalist theinformation&amp;quot;, n = 1000)
ti3 &amp;lt;- search_users(&amp;quot;producer theinformation&amp;quot;, n = 1000)
ti4 &amp;lt;- search_users(&amp;quot;designer theinformation&amp;quot;, n = 1000)
ti5 &amp;lt;- search_users(&amp;quot;editor theinformation&amp;quot;, n = 1000)
ti6 &amp;lt;- search_users(&amp;quot;writer theinformation&amp;quot;, n = 1000)
ti7 &amp;lt;- search_users(&amp;quot;analyst theinformation&amp;quot;, n = 1000)
ti8 &amp;lt;- search_users(&amp;quot;current theinformation&amp;quot;, n = 1000)
ti9 &amp;lt;- search_users(&amp;quot;former theinformation&amp;quot;, n = 1000)
ti10 &amp;lt;- search_users(&amp;quot;bylines theinformation&amp;quot;, n = 1000)
ti11 &amp;lt;- search_users(&amp;quot;columnist theinformation&amp;quot;, n = 1000)
ti12 &amp;lt;- search_users(&amp;quot;freelance theinformation&amp;quot;, n = 1000)
ti&amp;lt;-rbind(ti1, ti2, ti3, ti4, ti5, ti6, ti7, ti8, ti9, ti10, ti11, ti12)
ti$outlet&amp;lt;-&amp;quot;The Information&amp;quot;
rm(ti1, ti2, ti3, ti4, ti5, ti6, ti7, ti8, ti9, ti10, ti11, ti12)

tc1 &amp;lt;- search_users(&amp;quot;reporter techcrunch&amp;quot;, n = 1000)
tc2 &amp;lt;- search_users(&amp;quot;journalist techcrunch&amp;quot;, n = 1000)
tc3 &amp;lt;- search_users(&amp;quot;producer techcrunch&amp;quot;, n = 1000)
tc4 &amp;lt;- search_users(&amp;quot;designer techcrunch&amp;quot;, n = 1000)
tc5 &amp;lt;- search_users(&amp;quot;editor techcrunch&amp;quot;, n = 1000)
tc6 &amp;lt;- search_users(&amp;quot;writer techcrunch&amp;quot;, n = 1000)
tc7 &amp;lt;- search_users(&amp;quot;analyst techcrunch&amp;quot;, n = 1000)
tc8 &amp;lt;- search_users(&amp;quot;current techcrunch&amp;quot;, n = 1000)
tc9 &amp;lt;- search_users(&amp;quot;former techcrunch&amp;quot;, n = 1000)
tc10 &amp;lt;- search_users(&amp;quot;bylines techcrunch&amp;quot;, n = 1000)
tc11 &amp;lt;- search_users(&amp;quot;columnist techcrunch&amp;quot;, n = 1000)
tc12 &amp;lt;- search_users(&amp;quot;freelance techcrunch&amp;quot;, n = 1000)
tc&amp;lt;-rbind(tc1, tc2, tc3, tc4, tc5, tc6, tc7, tc8, tc9, tc10, tc11, tc12)
tc$outlet&amp;lt;-&amp;quot;TechCrunch&amp;quot;
rm(tc1, tc2, tc3, tc4, tc5, tc6, tc7, tc8, tc9, tc10, tc11, tc12)

rc1 &amp;lt;- search_users(&amp;quot;reporter recode&amp;quot;, n = 1000)
rc2 &amp;lt;- search_users(&amp;quot;journalist recode&amp;quot;, n = 1000)
rc3 &amp;lt;- search_users(&amp;quot;producer recode&amp;quot;, n = 1000)
rc4 &amp;lt;- search_users(&amp;quot;designer recode&amp;quot;, n = 1000)
rc5 &amp;lt;- search_users(&amp;quot;editor recode&amp;quot;, n = 1000)
rc6 &amp;lt;- search_users(&amp;quot;writer recode&amp;quot;, n = 1000)
rc7 &amp;lt;- search_users(&amp;quot;analyst recode&amp;quot;, n = 1000)
rc8 &amp;lt;- search_users(&amp;quot;current recode&amp;quot;, n = 1000)
rc9 &amp;lt;- search_users(&amp;quot;former recode&amp;quot;, n = 1000)
rc10 &amp;lt;- search_users(&amp;quot;bylines recode&amp;quot;, n = 1000)
rc11 &amp;lt;- search_users(&amp;quot;columnist recode&amp;quot;, n = 1000)
rc12 &amp;lt;- search_users(&amp;quot;freelance recode&amp;quot;, n = 1000)
rc&amp;lt;-rbind(rc1, rc2, rc3, rc4, rc5, rc6, rc7, rc8, rc9, rc10, rc11, rc12)
rc$outlet&amp;lt;-&amp;quot;Recode&amp;quot;
rm(rc1, rc2, rc3, rc4, rc5, rc6, rc7, rc8, rc9, rc10, rc11, rc12)

mb1 &amp;lt;- search_users(&amp;quot;reporter motherboard&amp;quot;, n = 1000)
mb2 &amp;lt;- search_users(&amp;quot;journalist motherboard&amp;quot;, n = 1000)
mb3 &amp;lt;- search_users(&amp;quot;producer motherboard&amp;quot;, n = 1000)
mb4 &amp;lt;- search_users(&amp;quot;designer motherboard&amp;quot;, n = 1000)
mb5 &amp;lt;- search_users(&amp;quot;editor motherboard&amp;quot;, n = 1000)
mb6 &amp;lt;- search_users(&amp;quot;writer motherboard&amp;quot;, n = 1000)
mb7 &amp;lt;- search_users(&amp;quot;analyst motherboard&amp;quot;, n = 1000)
mb8 &amp;lt;- search_users(&amp;quot;current motherboard&amp;quot;, n = 1000)
mb9 &amp;lt;- search_users(&amp;quot;former motherboard&amp;quot;, n = 1000)
mb10 &amp;lt;- search_users(&amp;quot;bylines motherboard&amp;quot;, n = 1000)
mb11 &amp;lt;- search_users(&amp;quot;columnist motherboard&amp;quot;, n = 1000)
mb12 &amp;lt;- search_users(&amp;quot;freelance motherboard&amp;quot;, n = 1000)
mb&amp;lt;-rbind(mb1, mb2, mb3, mb4, mb5, mb6, mb7, mb8, mb9, mb10, mb11, mb12)
mb$outlet&amp;lt;-&amp;quot;Motherboard&amp;quot;
rm(mb1, mb2, mb3, mb4, mb5, mb6, mb7, mb8, mb9, mb10, mb11, mb12)

nyt &amp;lt;- search_users(&amp;quot;tech nytimes&amp;quot;, n = 1000)
lookup_users(c(&amp;quot;MikeIsaac&amp;quot;, &amp;quot;markoff&amp;quot;, &amp;quot;kevinroose&amp;quot;, &amp;quot;nathanielpopper&amp;quot;))

df&amp;lt;-rbind(v, go, e, vb, wi, nw, gm, cn, tr, ti, tc, rc, mb)

# ReadWrite, ForbesTech, and TechDirt were queried but excluded because
# each one had fewer than ten results.

# Restrict to English language accounts
df &amp;lt;- df %&amp;gt;%
  filter(lang==&amp;quot;en&amp;quot;) %&amp;gt;%
  select(screen_name, name, location, description, followers_count, friends_count,
         listed_count,  statuses_count, favourites_count,   account_created_at, verified,
         profile_expanded_url,profile_image_url,outlet) %&amp;gt;%
  distinct()

# Standardize and export for manual inspection

# journos &amp;lt;- apply(df,2,as.character)

# write.csv(df, &amp;quot;journos.intermediate.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The total number of accounts identified in this fashion was 1740, including some false positives such as generic brand entities or irrelevant coincidences. So we manually went through the results and narrowed the dataset down. We then conducted the subjective assignment of race and gender. We also standardized names and removed emojis in preparation for the next stage of analysis. This process left 855 individuals. There are a few duplicates (people who have written for multiple tech journalism outlets), which we retain for our diversity analysis at the outlet-level. We remove duplicates otherwise.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Load the manually cleaned spreadsheet

# df&amp;lt;-read.csv(&amp;quot;/Users/justin/Dropbox/Public/journos.intermediate.csv&amp;quot;)

# Calculate percent white within each tech journalism outlet
totals.subjective&amp;lt;-df %&amp;gt;%
  drop_na(subjective_race) %&amp;gt;%
  group_by(outlet, subjective_race) %&amp;gt;%
  summarise(n = n()) %&amp;gt;%
  mutate(Percent = n / sum(n)) %&amp;gt;%
  filter(subjective_race==&amp;quot;White&amp;quot;)

# Calculate the grand mean across outlets
# mean(totals.subjective$Percent)

# Prepare a dataframe to make the main featured graph
main.graph.df&amp;lt;-df %&amp;gt;%
  drop_na(subjective_race) %&amp;gt;%
  group_by(outlet, subjective_race) %&amp;gt;%
  summarise(n = n()) %&amp;gt;%
  mutate(Percent = n / sum(n)) %&amp;gt;%
  filter(subjective_race==&amp;quot;White&amp;quot;) %&amp;gt;%
  select(outlet, Percent) %&amp;gt;%
  mutate(Percent = Percent*100)

# Add tech company workforces stats
outlet&amp;lt;-c(&amp;quot;Facebook&amp;quot;, &amp;quot;Google&amp;quot;, &amp;quot;Microsoft&amp;quot;, &amp;quot;Amazon&amp;quot;, &amp;quot;Apple&amp;quot;)
Percent&amp;lt;-c(63.2, 51.7, 53.2, 34.7, 50)
tech.df&amp;lt;-as.data.frame(cbind(outlet, Percent))
tech.df$Percent&amp;lt;-as.numeric(levels(tech.df$Percent))[tech.df$Percent]

# Wrangle the two together
main.graph.df&amp;lt;-bind_rows(main.graph.df, tech.df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in bind_rows_(x, .id): Unequal factor levels: coercing to character&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in bind_rows_(x, .id): binding character and factor vector,
## coercing into character vector

## Warning in bind_rows_(x, .id): binding character and factor vector,
## coercing into character vector&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;main.graph.df$Type &amp;lt;- NA
main.graph.df$Type[1:13] &amp;lt;- &amp;quot;Tech Journalism&amp;quot;
main.graph.df$Type[14:18] &amp;lt;- &amp;quot;Tech Companies&amp;quot;

# Create main featured graph
main.graph.df %&amp;gt;%
  ggplot(aes(x=fct_reorder(outlet, Percent), y=Percent, colour=Type)) +
  geom_point(size=6) +
  coord_flip() +
  theme_bw(base_size = 16) +
  labs(x=&amp;quot;&amp;quot;, y=&amp;quot;Percent White&amp;quot;) +
       #title=&amp;quot;Tech Journalism Is Less Diverse Than Tech&amp;quot;,
       #subtitle = &amp;quot;Percent white, tech journalists vs. tech companies&amp;quot;) +
       theme(legend.position=&amp;quot;bottom&amp;quot;) +
       theme(legend.title=element_blank()) +
  theme(plot.margin = grid::unit(c(1,3,.5,1), &amp;quot;cm&amp;quot;)) +
  scale_y_continuous(breaks = seq(0, 100, by = 10), limits=(c(0,100)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-07-racial-and-gender-diversity-among-tech-journalists-on-twitter_files/figure-html/analysis-sample-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# ggsave(&amp;quot;~/Downloads/Tech-journalism-is-less-diverse-than-tech.png&amp;quot;, width=8, height=9)

# Make a Twitter card version of the featured graph
main.graph.df %&amp;gt;%
  ggplot(aes(x=fct_reorder(outlet, Percent), y=Percent, colour=Type)) +
  geom_point(size=4) +
  coord_flip() +
  theme_bw(base_size = 14) +
  labs(x=&amp;quot;&amp;quot;, y=&amp;quot;Percent White&amp;quot;) +
       #title=&amp;quot;Tech Journalism Is Less Diverse Than Tech&amp;quot;,
       #subtitle = &amp;quot;Percent white, tech journalists vs. tech companies&amp;quot;) +
       theme(legend.position=&amp;quot;bottom&amp;quot;) +
       theme(legend.title=element_blank()) +
  theme(plot.margin = grid::unit(c(3,1.5,1.5,.5), &amp;quot;cm&amp;quot;)) +
  scale_y_continuous(breaks = seq(0, 100, by = 10), limits=(c(0,100)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-07-racial-and-gender-diversity-among-tech-journalists-on-twitter_files/figure-html/analysis-sample-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 
# ggsave(&amp;quot;~/Downloads/Tech-journalism-is-less-diverse-than-tech-for-Twitter.png&amp;quot;, width=8, height=6)

# Calculate overall stats for subjectively assigned race
# summary(df$subjective_race)

# Visualize overall stats for subjectively assigned race
df %&amp;gt;%
  drop_na(subjective_gender) %&amp;gt;%
  group_by(outlet, subjective_gender) %&amp;gt;%
  summarise(n = n()) %&amp;gt;%
  mutate(Percent = n / sum(n)) %&amp;gt;%
  filter(subjective_gender==&amp;quot;Male&amp;quot;) %&amp;gt;%
  ggplot(aes(x=fct_reorder(outlet, Percent), y=Percent)) +
  geom_point(color = &amp;quot;#9124b5&amp;quot;) +
  coord_flip() +
  theme_bw() +
  labs(x=&amp;quot;&amp;quot;, y=&amp;quot;Proportion Male&amp;quot;,
       title=&amp;quot;Gender Diversity Across 13 Major Tech-Journalism Outlets&amp;quot;,
       subtitle = &amp;quot;Race inferred by subjective judgment. N=717.&amp;quot;,
       caption= &amp;quot;By Justin Murphy (jmrphy.net, @jmrphy).&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-07-racial-and-gender-diversity-among-tech-journalists-on-twitter_files/figure-html/analysis-sample-1-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Calculate overall stats for subjectively assigned gender
# summary(df$subjective_gender)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;According to our subjective judgment, 568 are likely White, 102 Asian, 18 Black, and 8 Hispanic.&lt;/p&gt;
&lt;p&gt;Also according to our subjective judgment, 477 are Male and 317 are Female.&lt;/p&gt;
&lt;p&gt;Next we leverage the &lt;a href=&#34;https://cran.r-project.org/web/packages/predictrace/vignettes/Predict-race-of-surname.html&#34;&gt;&lt;em&gt;predictrace&lt;/em&gt;&lt;/a&gt; package to infer race from surnames, based on the co-occurrence of surnames and self-reported races in the Census datasets.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Use names and publicly available datasets to infer race and gender non-subjectively

# Extract surname from the full name
df$lastnames &amp;lt;- word(df$name,-1)
# Predict race from surname
race.profiles.df&amp;lt;-predict_race(df$lastnames)

# To partially mitigate the problem of under-identifying black people,
# any surname with a probability of being black greater than .4 will
# will be classified as black. This will increase the error rate of
# classifying white people as black, but decrease the error rate of
# classifying black people as white.

race.profiles.df$likely_race&amp;lt;-ifelse(race.profiles.df$probability_black&amp;gt;.4 &amp;amp;
         race.profiles.df$likely_race==&amp;quot;white&amp;quot;,
       &amp;quot;black&amp;quot;,
       race.profiles.df$likely_race)

# I think there&amp;#39;s a bug in the predictrace package which fails
# to infer Hispanic race even when it identifies a very high probability
# of being Hispanic. I&amp;#39;m correcting this manually by inferring
# Hispanic race for any probability greater than .5.

race.profiles.df$likely_race&amp;lt;-ifelse(race.profiles.df$probability_hispanic&amp;gt;.5,
       &amp;quot;hispanic&amp;quot;,
       race.profiles.df$likely_race)


# Bind predicted race variables to Twitter profiles
df &amp;lt;- cbind(df, race.profiles.df$likely_race)
# Rename the inferred race variable
df$race &amp;lt;- df$`race.profiles.df$likely_race`

# Extract first name from the full name
df$firstnames&amp;lt;-word(df$name,1)
# Predict gender from first name
gender.profiles.df&amp;lt;-gender(df$firstnames)
# Rename the inferred gender variable
gender.profiles.df$firstnames&amp;lt;-gender.profiles.df$name
# Merge gender variables with Twitter profiles
df&amp;lt;-merge(df, select(gender.profiles.df, gender, firstnames), by=&amp;quot;firstnames&amp;quot;, all.x=T)
# Remove duplicates created in merge
df&amp;lt;-distinct(df)
# Remove redundant columns
df&amp;lt;-select(df, -c(firstnames, lastnames, `race.profiles.df$likely_race`))

df$race&amp;lt;-recode(df$race, asian = &amp;quot;Asian&amp;quot;,
                        black = &amp;quot;Black&amp;quot;,
                        white = &amp;quot;White&amp;quot;,
                        hispanic = &amp;quot;Hispanic&amp;quot;,
                        american_indian = &amp;quot;American Indian&amp;quot;)
# summary(df$race)

# Export final spreadsheet (this is the one you can download)

# write.csv(df, &amp;quot;/Users/justin/Dropbox/Public/journos.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;totals.objective&amp;lt;-df %&amp;gt;%
  drop_na(race) %&amp;gt;%
  group_by(outlet, race) %&amp;gt;%
  summarise(n = n()) %&amp;gt;%
  mutate(Percent = n / sum(n)) %&amp;gt;%
  filter(race==&amp;quot;White&amp;quot;)

# mean(totals.objective$Percent)

df %&amp;gt;%
  drop_na(race) %&amp;gt;%
  group_by(outlet, race) %&amp;gt;%
  summarise(n = n()) %&amp;gt;%
  mutate(Percent = n / sum(n)) %&amp;gt;%
  filter(race==&amp;quot;White&amp;quot;) %&amp;gt;%
  ggplot(aes(x=fct_reorder(outlet, Percent), y=Percent)) +
  geom_point(color = &amp;quot;#9124b5&amp;quot;) +
  coord_flip() +
  theme_bw() +
  labs(x=&amp;quot;&amp;quot;, y=&amp;quot;Percent White&amp;quot;,
       title=&amp;quot;Racial Diversity Across 13 Major Tech-Journalism Outlets&amp;quot;,
       subtitle = &amp;quot;Race inferred from surnames using Census Data. N=481.&amp;quot;,
       caption= &amp;quot;By Justin Murphy (jmrphy.net, @jmrphy).&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-07-racial-and-gender-diversity-among-tech-journalists-on-twitter_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;According to this automated data-driven method, 416 are likely White, 54 Asian, 24 Black, 26 Hispanic, and 1 American Indian. (We did not code for American Indian when we did the subjective assessment.) The rest could not be classified. The White percentage is still very close to our estimates based on subjective assessments: About 77%.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
drop_na(race) %&amp;gt;%
ggplot(aes(x = race)) +  
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = &amp;quot;#9124b5&amp;quot;) +
  theme_bw() +
  labs(title=&amp;quot;Racial Diversity Among Tech Journalists on Twitter&amp;quot;,
       subtitle=&amp;quot;Race inferred from surname using Census data. N=521.&amp;quot;,
      x=&amp;quot;&amp;quot;,
       y=&amp;quot;Proportion&amp;quot;,
      caption=&amp;quot;By Justin Murphy (jmrphy.net, @jmrphy)&amp;quot;) +
  coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-07-racial-and-gender-diversity-among-tech-journalists-on-twitter_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Setting aside outlets, below is the graph for the distribution of race according to our subjective assessments of race.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
drop_na(subjective_race) %&amp;gt;%
ggplot(aes(x = subjective_race)) +  
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = &amp;quot;#9124b5&amp;quot;) +
  theme_bw() +
  labs(title=&amp;quot;Racial Diversity Among Tech Journalists on Twitter&amp;quot;,
       subtitle=&amp;quot;Race inferred by subjective judgment. N=696.&amp;quot;,
      x=&amp;quot;&amp;quot;,
       y=&amp;quot;Proportion&amp;quot;,
      caption=&amp;quot;By Justin Murphy (jmrphy.net, @jmrphy).&amp;quot;) +
  coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-07-racial-and-gender-diversity-among-tech-journalists-on-twitter_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And then we leverage the &lt;a href=&#34;https://cran.r-project.org/web/packages/gender/vignettes/predicting-gender.html&#34;&gt;&lt;em&gt;gender&lt;/em&gt;&lt;/a&gt; package to infer gender from first names, based on the co-occurrence of baby names and gender in the Social Security Administration datasets.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Graph of gender diversity in Sample 1
df %&amp;gt;%
drop_na(gender) %&amp;gt;%
ggplot(aes(x = gender)) +  
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = &amp;quot;#9124b5&amp;quot;) +
  theme_bw() +
  labs(title=&amp;quot;Gender Diversity Among Tech Journalists on Twitter&amp;quot;,
       subtitle=&amp;quot;Gender inferred from first name using SSA data. N=806.&amp;quot;,
      x=&amp;quot;&amp;quot;,
       y=&amp;quot;Proportion&amp;quot;,
      caption=&amp;quot;By Justin Murphy (jmrphy.net, @jmrphy).&amp;quot;) +
  coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-07-racial-and-gender-diversity-among-tech-journalists-on-twitter_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
drop_na(gender, race) %&amp;gt;%
ggplot(aes(x = race)) +  
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = &amp;quot;#9124b5&amp;quot;) +
  theme_bw() +
  labs(title=&amp;quot;Racial and Gender Diversity Among Tech Journalists on Twitter&amp;quot;,
       subtitle=&amp;quot;Race and gender inferred from names using government data. N=500.&amp;quot;,
      x=&amp;quot;&amp;quot;,
       y=&amp;quot;Proportion&amp;quot;,
      caption=&amp;quot;By Justin Murphy (jmrphy.net, @jmrphy).&amp;quot;) +
  coord_flip() + facet_wrap(.~gender)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-07-racial-and-gender-diversity-among-tech-journalists-on-twitter_files/figure-html/unnamed-chunk-5-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
drop_na(subjective_gender) %&amp;gt;%
ggplot(aes(x = subjective_gender)) +  
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = &amp;quot;#9124b5&amp;quot;) +
  theme_bw() +
  labs(title=&amp;quot;Gender Diversity Among Tech Journalists on Twitter&amp;quot;,
       subtitle=&amp;quot;Gender inferred by subjective judgment. N=794.&amp;quot;,
      x=&amp;quot;&amp;quot;,
       y=&amp;quot;Proportion&amp;quot;,
      caption=&amp;quot;By Justin Murphy (jmrphy.net, @jmrphy).&amp;quot;) +
  coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-07-racial-and-gender-diversity-among-tech-journalists-on-twitter_files/figure-html/unnamed-chunk-5-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
drop_na(subjective_gender, subjective_race) %&amp;gt;%
ggplot(aes(x = subjective_race)) +  
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = &amp;quot;#9124b5&amp;quot;) +
  theme_bw() +
  labs(title=&amp;quot;Racial and Gender Diversity Among Tech Journalists on Twitter&amp;quot;,
       subtitle=&amp;quot;Race and gender inferred by subjective judgment..&amp;quot;,
      x=&amp;quot;&amp;quot;,
       y=&amp;quot;Proportion&amp;quot;,
      caption=&amp;quot;By Justin Murphy (jmrphy.net, @jmrphy).&amp;quot;) +
  coord_flip() + facet_wrap(.~subjective_gender)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-07-racial-and-gender-diversity-among-tech-journalists-on-twitter_files/figure-html/unnamed-chunk-5-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
  drop_na(race) %&amp;gt;%
  group_by(outlet, race) %&amp;gt;%
  summarise(n = n()) %&amp;gt;%
  mutate(Percent = n / sum(n)) %&amp;gt;%
  filter(race==&amp;quot;White&amp;quot;) %&amp;gt;%
  ggplot(aes(x=fct_reorder(outlet, Percent), y=Percent)) +
  geom_point(color = &amp;quot;#9124b5&amp;quot;) +
  coord_flip() +
  theme_bw() +
  labs(x=&amp;quot;&amp;quot;, y=&amp;quot;Percent White&amp;quot;,
       title=&amp;quot;Racial Diversity Across 13 Major Tech-Journalism Outlets&amp;quot;,
       subtitle = &amp;quot;Race inferred from surnames using government data. N=521.&amp;quot;,
       caption= &amp;quot;By Justin Murphy (jmrphy.net, @jmrphy).&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-07-racial-and-gender-diversity-among-tech-journalists-on-twitter_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# summary(df$subjective_race)

df %&amp;gt;%
  drop_na(gender) %&amp;gt;%
  group_by(outlet, gender) %&amp;gt;%
  summarise(n = n()) %&amp;gt;%
  mutate(Percent = n / sum(n)) %&amp;gt;%
  filter(gender==&amp;quot;male&amp;quot;) %&amp;gt;%
  ggplot(aes(x=fct_reorder(outlet, Percent), y=Percent)) +
  geom_point(color = &amp;quot;#9124b5&amp;quot;) +
  coord_flip() +
  theme_bw() +
  labs(x=&amp;quot;&amp;quot;, y=&amp;quot;Percent Male&amp;quot;,
       title=&amp;quot;Gender Diversity Across 13 Major Tech-Journalism Outlets&amp;quot;,
       subtitle = &amp;quot;Gender inferred by subjective judgment. N=794.&amp;quot;,
       caption= &amp;quot;By Justin Murphy (jmrphy.net, @jmrphy).&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-07-racial-and-gender-diversity-among-tech-journalists-on-twitter_files/figure-html/unnamed-chunk-6-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;approach-2-curated-lists-of-tech-journalists&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Approach 2: Curated lists of “tech journalists”&lt;/h2&gt;
&lt;p&gt;I found two Twitter lists entitled “Tech Journalists” (&lt;a href=&#34;https://twitter.com/i/lists/96162061&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/i/lists/53301954&#34;&gt;2&lt;/a&gt;). I take these at face value and combine all the listed Twitter accounts into a new sample of tech journalists. Then I re-run all of the analyses above on this new sample. The initial number of journalists in Sample 2 is 424; after removing duplicates the number is 360.&lt;/p&gt;
&lt;p&gt;The basic counts are: 179 likely to be White, 17 likely to be Asian, 9 likely to be Black, and 8 likely to be Hispanic. The rest could not be classified.&lt;/p&gt;
&lt;p&gt;The result is very close to our previous results, again: 84% White.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Import the accounts identified by each list
journo.list1&amp;lt;-lists_members(96162061)
journo.list2&amp;lt;-lists_members(53301954)

# Bind them into one dataframe
df2&amp;lt;-rbind(journo.list1, journo.list2)

# Extract surname and predict race
df2$lastnames&amp;lt;-word(df2$name,-1)
race.lists.df&amp;lt;-predict_race(df2$lastnames)

# To partially mitigate the problem of under-identifying black people,
# any surname with a probability of being black greater than .4 will
# will be classified as black. This will increase the error rate of
# classifying white people as black, but decrease the error rate of
# classifying black people as white.

race.lists.df$likely_race&amp;lt;-ifelse(race.lists.df$probability_black&amp;gt;.4 &amp;amp;
         race.lists.df$likely_race==&amp;quot;white&amp;quot;,
       &amp;quot;black&amp;quot;,
       race.lists.df$likely_race)

# I think there&amp;#39;s a bug in the predictrace package which fails
# to infer Hispanic race even when it identifies a very high probability
# of being Hispanic. I&amp;#39;m mitigating this manually by inferring
# Hispanic race for any probability greater than .5.

race.lists.df$likely_race&amp;lt;-ifelse(race.lists.df$probability_hispanic&amp;gt;.5,
       &amp;quot;hispanic&amp;quot;,
       race.lists.df$likely_race)

df2$race&amp;lt;-race.lists.df$likely_race

# Extract first name and predict gender
df2$firstnames&amp;lt;-word(df2$name,1)
gender.lists.df&amp;lt;-gender(df2$firstnames)
gender.lists.df$firstnames&amp;lt;-gender.lists.df$name

# Merge and remove duplicates
df2&amp;lt;-merge(df2, gender.lists.df, by=&amp;quot;firstnames&amp;quot;)
df2&amp;lt;-distinct(df2)

# Fix capitalization
df2$race&amp;lt;-recode(df2$race, asian = &amp;quot;Asian&amp;quot;,
                        black = &amp;quot;Black&amp;quot;,
                        white = &amp;quot;White&amp;quot;,
                        hispanic = &amp;quot;Hispanic&amp;quot;)

# Export
# write.csv(df2, &amp;quot;/Users/justin/Dropbox/Public/tech-journalists-from-lists-df.csv&amp;quot;)

# Total percentages from lists
totals.from.lists&amp;lt;-df2 %&amp;gt;%
  drop_na(race) %&amp;gt;%
  group_by(race) %&amp;gt;%
  summarise(n = n()) %&amp;gt;%
  mutate(Percent = n / sum(n)) %&amp;gt;%
  filter(race==&amp;quot;White&amp;quot;)

df2 %&amp;gt;%
drop_na(race) %&amp;gt;%
ggplot(aes(x = race)) +  
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = &amp;quot;#9124b5&amp;quot;) +
  theme_bw() +
  labs(title=&amp;quot;Racial Diversity Among Tech Journalists on Twitter&amp;quot;,
       subtitle=&amp;quot;Sample 2: Lists of tech journalists on Twitter, curated by third parties&amp;quot;,
      x=&amp;quot;Most likely race&amp;quot;,
       y=&amp;quot;Proportion&amp;quot;) +
#      caption=&amp;quot;Race is inferred from surname using Census data.\n By Justin Murphy #(jmrphy.net, @jmrphy)&amp;quot;) +
  coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using the third-party Twitter lists of tech journalists and inferring race surnames suggests that tech journalists are 84% White.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df2 %&amp;gt;%
drop_na(gender) %&amp;gt;%
ggplot(aes(x = gender)) +  
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = &amp;quot;#9124b5&amp;quot;) +
  theme_bw() +
  labs(title=&amp;quot;Gender Diversity Among Tech Journalists on Twitter&amp;quot;,
       subtitle=&amp;quot;Sample 2: Lists of tech journalists on Twitter, curated by third parties&amp;quot;,
      x=&amp;quot;Most likely gender&amp;quot;,
       y=&amp;quot;Proportion&amp;quot;,
      caption=&amp;quot;Gender is inferred from Social Security Administration data. \n By Justin Murphy (jmrphy.net, @jmrphy)&amp;quot;) +
  coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-07-racial-and-gender-diversity-among-tech-journalists-on-twitter_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df2 %&amp;gt;%
drop_na(gender, race) %&amp;gt;%
ggplot(aes(x = race)) +  
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = &amp;quot;#9124b5&amp;quot;) +
  theme_bw() +
  labs(title=&amp;quot;Racial and Gender Diversity Among Tech Journalists on Twitter&amp;quot;,
       subtitle=&amp;quot;Sample 2: Lists of tech journalists on Twitter, curated by third parties&amp;quot;,
      x=&amp;quot;Most likely race&amp;quot;,
       y=&amp;quot;Proportion&amp;quot;,
      caption=&amp;quot;Race is inferred from surname using Census data; gender from \n first name using Social Security Administration baby names. \n By Justin Murphy (jmrphy.net, @jmrphy)&amp;quot;) +
  coord_flip() + facet_wrap(.~gender)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-07-racial-and-gender-diversity-among-tech-journalists-on-twitter_files/figure-html/unnamed-chunk-7-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The roughly similar distributions across two different sampling methods and two different measurement methods suggest the the results here are likely an accurate portrait of tech-journalism Twitter generally.&lt;/p&gt;
&lt;p&gt;If you spot any errors, &lt;a href=&#34;https://theotherlifenow.com/contact/&#34;&gt;please contact me.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Feminism and the problem of supertoxic masculinity</title>
      <link>/blog/2017/07/13/supertoxic-masculinity/</link>
      <pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/2017/07/13/supertoxic-masculinity/</guid>
      <description>&lt;p&gt;I just watched &lt;a href=&#34;http://www.imdb.com/title/tt6071534/&#34; target=&#34;_blank&#34;&gt;a documentary film about John McAfee,&lt;/a&gt; creator of the famous McAfee Antivirus you will remember from every PC in the 1990s. I didn&amp;rsquo;t know anything about this man before watching this film. I want to make a point that requires me to give you a brief summary of the story, so here is a plot-spoiling recapitulation. Basically, after he gets rich off McAfee Antivirus, McAfee has a couple of failed business ventures before proceeding through a brazenly aggressive, daring, manipulative, controlling, arrogant, violent, and ultimately murderous course of affairs.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; After a few years as a yoga guru preaching peace and wellness from a retreat center he funded, there’s some indication that he becomes disillusioned with his efforts toward egalitarian community (he suggests something to the effect that others were taking advantage of him, but this is not examined deeply). So he buys a house in Belize, hires an idealistic biologist from the US to run an alternative medicine laboratory, recruits the toughest gangsters he can find to build an in-house private security force, donates to local police equipment worth millions of dollars, and effectively purchases several poor, local women as long-term girlfriends. When he had the time to also get two gnarly tribal tattoos was unclear to me.&lt;/p&gt;

&lt;p&gt;Just to round out the psychological and behavioral profile here, note that he rarely, if ever, had sex with his girlfriends; he rather liked to defecate in their mouths while lying in a hammock. When the biologist expresses concern about their business relationship, he drugs and rapes her &lt;em&gt;that evening,&lt;/em&gt; according to the biologist’s testimony in the film. McAfee’s vicious guard dogs roamed freely on the public beach around his house, so a neighbor poisoned the dogs. Then, the film suggests, McAfee promptly hired a man to kill the neighbor. This murder allegation becomes global news, and McAfee embarks on an international fugitive escape adventure. He gets into Guatemala, where he avoids extradition back to Belize by faking a heart attack, and thereby engineering his deportation back to the United States. He then promptly runs for President in the Libertarian Party, where he comes in second place.&lt;/p&gt;

&lt;p&gt;Now, it is striking enough that the winner of the 2016 Presidential election is an icon of ignoring feminist ethical expectations—at a time when feminist expectations are more culturally ascendant than ever. But perhaps that was a fluke. The McAfee story is profound because it shows in stunning, horrifying detail how the hyper-masculine drive to dominate really works in contemporary culture: when cranked sufficiently high, it rapidly and easily trounces any quantity of moral outrage and/or legal constraints, in a direct line toward the zenith of the global dominance hierarchy.&lt;/p&gt;

&lt;p&gt;Moderate misogyny can get you exiled from contemporary public culture, often for good reason, but hyper-misogyny in an intelligent and driven male appears to give you sovereignty &lt;em&gt;over&lt;/em&gt; public culture. It seems to me that, if feminism today has one genuinely catastrophic problem to be rightfully alarmist about, it might just be the small number of males who will not be domesticated through social-moral pressure.&lt;/p&gt;

&lt;p&gt;First, a premise of my argument is that SJW culture is genuinely quite effective at minimizing the nastier masculine edges of large numbers of men, because most men are decent people who want to be liked and approved by most others. This is not an empirical article so I won’t go into it, but if you doubt there’s been a general cultural pacification of male aggression just watch a random film from the 1950s and then watch a random film at your local cinema. Anyway, people on the left and right disagree about what to call this trend, but its existence is attested by all. Feminists see this as men learning to be less violent and oppressive, and feminists celebrate women’s long-term positive effect on the civilizing of violent patriarchies; others see this as a kind of female totalitarianism and evidence of civilizational decline.  But the fact that feminist cultural politics have exerted notable and widespread effects of generally reducing the expression of masculine aggression in public culture seems hard to dispute.&lt;/p&gt;

&lt;p&gt;The hypothesis I would like to advance is that this social domestication of masculine tendencies has made our society more vulnerable to the rare cases of men who escape the filter of social opprobrium. The life of John McAfee is a case study of this problem.&lt;/p&gt;

&lt;p&gt;Why would the social pacification of once popular, moderate masculinity empower more virulent forms of violent masculinity? Many lefties think that pacifying the larger mass of men will shift the whole distribution of male behavior, lowering the ceiling of how bad the worst men may become. I would say this is the dominant mental model of most SJWs, because it’s the basic picture that comes out of liberal arts education today (that our images of the world shape what we do in the world, hence the emphasis on media and “representations”).&lt;/p&gt;

&lt;p&gt;The problem is that when the baseline of masculine dominance expression is held below it&amp;rsquo;s organic tendency, defined simply as what men would do in the absence of cultural campaigns to defang it, this increases the potential payoff to those who dare exercise it, as there are more resources to dominate precisely to the degree that other men are not contesting them. Not only does it increase the rewards available, it decreases the risk of competing for them, as the chance of being defeated by an equally aggressive male, or even just the chance of encountering costly competition at all, is lower than it would be in a world of much but minor, local masculine excess. We might also adduce a “rusty monitor” effect: Through the domestication of men over time, most people become blissfully forgetful about what genuinely dangerous men are capable of, decreasing the probability or the speed with which domesticated males might awake from their slumber.&lt;/p&gt;

&lt;p&gt;Another reason the over-domestication of moderate masculinity is dangerous is that it makes it too easy for ethically lax “bad characters” to win all of the large number of local hierarchies that would typically have the function of imposing humility and modesty on cocky boys coming of age. If you’re a highly intelligent, confident, and driven young man, the complex difficulty of having to navigate multiple distinct local hierarchies (among other highly driven males  themselves sometimes prone to dangerous excess) from a young age, teaches you very quickly that you cannot ever be the best at everything. And that if you cut corners anti-socially you will be destroyed by other males invested in the maintenance of sociality. Examples of local hierarchies are sports competition,  dating, ethical honor or “character” in the neighborhood or religious community, or even just fleeting micro-social competition such as battles of wits in social gatherings. All of these things will function as negative feedback mechanisms tempering genuinely dangerous anti-social ambitions in young boys coming of age, but only if the other males are equally able and willing to play all of these games to the best of their abilities.&lt;/p&gt;

&lt;p&gt;If you’re overzealous or immodest or you cheat or you ignore your standing in one local hierarchy to dominate another—all of these things tend to get constrained by other males of equal will and ability, who are also sometimes dangerous and who have an interest in knocking all wiley characters down a few notches. What’s happened in recent decades is that a non-trivial portion of the West’s most intelligent and ambitious males pursue cultural careers predicated very specifically on the strategic under-display of their will to power. Take someone like the Canadian Prime Minister Justin Trudeau—he’s the leading politician of a whole country, so nobody can deny that this is a man with a substantial will to rise to the top through a whole series of competitive filters. But he is one of the best examples of how, today, the path to power for all “decent men” consists in a deeply deceptive competition to appear maximally unthreatening. One reason you get the John McAfee’s of the world is because they went to high school with the Justin Trudeau’s of the world. In all of the little, local hierarchies they encountered throughout life, people like John McAfee and Donald Trump learned that they could be as anti-socially ambitious as they pleased and no other intelligent and able men would check them (because those men were opting for the cultural capital that accrues to being feminist). A serious challenge for feminism is to see that someone like Justin Trudeau is seriously complicit in the production of the McAfees and Trumps of the world. And if your a cheer-leader for the former, you’re an objective supporter and producer of the latter.&lt;/p&gt;

&lt;p&gt;I also think that people like McAfee and Trump learn early in life that if you are ostracized from social groups for exceeding moral expectations, then you can just channel your anti-social intelligence to making money all the more efficiently. That is, another key problem is that in secular, advanced capitalist countries such as the U.S., if you are smart and driven enough it is a feasible life path to accept absolute social exile by converting all of your energy into economic capital accumulation, and then build up a new social cosmos for yourself. The interesting thing is to see that this is really only psychologically and materially feasible in a very late stage of advanced western capitalism where non-economic criteria of value have all but disappeared. Whereas above we saw one reason for the emergence of the McAfee’s and Trump’s of the world is that there wasn’t enough local masculine aggression to check them throughout their life, here we note the specific problem that secular society lacks any effective adjudicator of human character other than economic prowess. In this particular dimension we see that the contemporary correlation of anti-capitalism and secularism/atheism is ultimately an untenable loop, because you never have an effective basis for anti-capitalist cultural change if you cannot submit to the possibility that values come from a place higher than practical reality. Of course people pretend they value other criteria, but those criteria don’t &lt;em&gt;operate&lt;/em&gt; in the selection of who ultimately wins attention, esteem, and power in society as a whole. There was no person, and no entity, in the entire life of these men who could credibly convey that there exist things in life more powerful than money, for the simple reason that hardly anyone believes this anymore. And so the most toxically ambitious males become the very first to realize that one can very well quit the entire game of socio-moral respectability and shoot to the top of everything via radically unreflective capital accumulation.&lt;/p&gt;

&lt;p&gt;Another reason why the constraining of moderate masculine toxicity may increase the power of supertoxic masculinity is that males may become more pathologically power hungry from lacking opportunities for healthy satiation. Once upon a time (for better or worse), masculine prowess promised a fair number of immediate satisfactions. The best football players received the genuine interest of the most desired girls in high school, say. But even from my own observations growing up, it was easy to see that as my cohort aged from about 10 years old up toward about 17 years old, conventionally masculine prowess became less and less effective at winning immediate social rewards. By the end of high school, the most desired girls were more interested in—I kid you not—a nationally competitive business role-playing team. What this suggests to me is that, aside from perhaps an early bump at the very beginning of adolescence, dominance hierarchies rapidly stop rewarding conventional masculine expressions of dominance behavior in favor of the capacity to elegantly dissimulate dominance behavior. Today all of the basic evolutionary machinery of mating and dominance competition remains in full operation, but it’s mind-bogglingly confusing because increasingly females select for males who can most creatively and effectively hide their power. What this means is that precisely the most over-flowingly aggressive males may be less and less likely to receive the basic, small doses of love and esteem that every human being requires, in their early socialization experiences. Combined with the previous point about the ultimate power of money, it’s easy to see how and why the feminist inversion of which males get selected by females (defining dominance as the dissimulation of dominance), has the direct consequence of leaving the most irrepressibly narcissistic and power-hungry males to seek unbridled social domination via capital, as a basic requirement for psychological self-maintenance.&lt;/p&gt;

&lt;p&gt;John McAfee and Donald Trump are the types of whom it can be said, literally, that they are capable of making the entire world conform to their whims. They can do this repeatedly and sustainably, even when a large number of interested opponents see what they are doing, even when it publicized to the moral outrage of the entire respectable, cosmopolitan world. What is genuinely frightening and dangerous about powerful males is precisely that their power is real, i.e. absolutely impervious to the wishes, interests, and indignant words of less powerful people.&lt;/p&gt;

&lt;p&gt;It seems to me that, broadly, there are two possible ways to dealing with this problem. The method popular activist culture has adopted is to work toward a state of zero dominance expression in all possible local and global hierarchies, with this leading to a substantially higher risk of psychopathic males going straight to the top of the megamachine, for all of the reasons I’ve laid out. Now, to be fair, I see one way you might still find this method preferable: if you believe that psychopathic male drives for dominance could possibly be socialized out of our biology altogether in some kind of long-term evolutionary engineering process. If that’s your model, then I suppose you could defend the now popular approach as a risky but radical plan to eliminate violence forever, or something like that. Personally, I find that hard to believe, but that would require a different essay. In the meantime, I suppose we all have to make our wagers as we see fit.&lt;/p&gt;

&lt;p&gt;Of course, the second solution is simply to permit or even encourage small amounts of masculine dominance behavior in a large number of local hierarchies (with some margin greater than zero for dangerous excesses), leading to a low likelihood of psychopathic males rising to the top of the megamachine.&lt;/p&gt;

&lt;p&gt;A final point about the role of higher education in all of this. In a contemporary liberal arts education, the primary educational experience is coming to feel the power of words. This is a real and important insight because in modern societies the symbolic order exerts extraordinary if diffuse effects, and I benefitted from gaining this kind of awareness in my own liberal arts education. This feeling is also exciting and empowering because we all have the capacity to produce words. But for this reason—combined with the fact that direct violence in wealthy Western societies is atypically low in long-run historical perspective—a very large number of well-meaning lefty folks today have genuinely forgotten that there exist forces more powerful than words. We have forgotten that the whole, horrifying, tragic, and very real problem of power is precisely that those who have enough of it may ultimately do exactly what they please. Many lefties today seem to be living on the genuine belief that enough people, saying enough words, is a viable method for constraining anything whatsoever. It’s not.&lt;/p&gt;

&lt;p&gt;The McAfee documentary is an extraordinary lesson of how no amount of moralizing can solve the fact that unequal distributions of raw human power exist across society; no amount of &amp;ldquo;awareness&amp;rdquo; or information-sharing or even law-making will ever be able to stop the will to power wherever it sneaks through the cracks of social inhibition. One of morality’s dirtiest and most harmful little secrets is that it only constrains power where power is already weak for other reasons. Contemporary SJW-styled feminism will make the large mass of beta bro’s marginally more polite. It may, for short- to medium-term intervals, suppress the brutality of alpha types who may indeed be prone to some abusive behaviors. But it will also ensure that wherever the male will to dominance arises in it purest form, it will wreak more havoc, more rapidly, more unpredictably, more completely, and at a higher socio-political level than it ever could have without feminist “moral progress.”&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Of course, I am assuming the film’s narrative is to be trusted. I haven’t fact-checked anything. Whether the film is perfectly accurate or fair is probably not crucial for the larger point I will make here.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;^&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
